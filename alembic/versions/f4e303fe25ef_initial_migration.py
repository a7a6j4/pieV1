"""Initial migration

Revision ID: f4e303fe25ef
Revises: 
Create Date: 2025-08-07 22:48:08.816255

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f4e303fe25ef'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('idx_transaction_cashflow_category'), table_name='transaction_cashflow')
    op.drop_index(op.f('idx_transaction_cashflow_issuer'), table_name='transaction_cashflow')
    op.drop_index(op.f('idx_transaction_cashflow_product'), table_name='transaction_cashflow')
    op.drop_index(op.f('idx_transaction_cashflow_type_status'), table_name='transaction_cashflow')
    op.drop_index(op.f('idx_transaction_cashflow_user_date'), table_name='transaction_cashflow')
    op.drop_table('transaction_cashflow')
    op.add_column('contribution_plan', sa.Column('currency', sa.Enum('NGN', 'USD', name='currency'), nullable=False))
    op.create_foreign_key(None, 'contribution_plan', 'portfolio', ['portfolio_id'], ['id'])
    op.drop_column('contribution_plan', 'Currency')
    op.create_foreign_key(None, 'depositrate', 'deposit', ['deposit_id'], ['id'])
    op.add_column('journal', sa.Column('date', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('kyc', sa.Column('gender', sa.String(), nullable=False))
    op.alter_column('kyc', 'nin',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('productvalue', 'date')
    op.create_unique_constraint('unique_target_portfolio', 'target', ['portfolio_id'])
    op.create_foreign_key(None, 'target', 'portfolio', ['portfolio_id'], ['id'])
    op.create_unique_constraint(None, 'user', ['phone_number'])
    op.create_foreign_key(None, 'variablevalue', 'variable', ['var_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'variablevalue', type_='foreignkey')
    op.drop_constraint(None, 'user', type_='unique')
    op.drop_constraint(None, 'target', type_='foreignkey')
    op.drop_constraint('unique_target_portfolio', 'target', type_='unique')
    op.add_column('productvalue', sa.Column('date', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.alter_column('kyc', 'nin',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('kyc', 'gender')
    op.drop_column('journal', 'date')
    op.drop_constraint(None, 'depositrate', type_='foreignkey')
    op.add_column('contribution_plan', sa.Column('Currency', postgresql.ENUM('NGN', 'USD', name='currency'), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'contribution_plan', type_='foreignkey')
    op.drop_column('contribution_plan', 'currency')
    op.create_table('transaction_cashflow',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('transaction_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('portfolio_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('wallet_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('issuer_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transaction_type', postgresql.ENUM('DEPOSIT', 'WITHDRAWAL', 'INVESTMENT', 'DIVIDEND', 'INTEREST', 'LIQUIDATION', 'FEE', 'TAX', 'TRANSFER', 'BUY', 'SELL', name='transactiontype'), autoincrement=False, nullable=False),
    sa.Column('transaction_category', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('amount', sa.NUMERIC(), autoincrement=False, nullable=False),
    sa.Column('currency', postgresql.ENUM('NGN', 'USD', name='currency'), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('PENDING', 'REVERSED', 'COMPLETED', 'FAILED', name='trasnsactionstatus'), autoincrement=False, nullable=False),
    sa.Column('units', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('price_per_unit', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('tenor', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('rate', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('cashflow_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('cashflow_category', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('transaction_date', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['issuer_id'], ['issuer.id'], name=op.f('transaction_cashflow_issuer_id_fkey')),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolio.id'], name=op.f('transaction_cashflow_portfolio_id_fkey')),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name=op.f('transaction_cashflow_product_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('transaction_cashflow_user_id_fkey')),
    sa.ForeignKeyConstraint(['wallet_id'], ['wallet.id'], name=op.f('transaction_cashflow_wallet_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('transaction_cashflow_pkey'))
    )
    op.create_index(op.f('idx_transaction_cashflow_user_date'), 'transaction_cashflow', ['user_id', 'transaction_date'], unique=False)
    op.create_index(op.f('idx_transaction_cashflow_type_status'), 'transaction_cashflow', ['transaction_type', 'status'], unique=False)
    op.create_index(op.f('idx_transaction_cashflow_product'), 'transaction_cashflow', ['product_id'], unique=False)
    op.create_index(op.f('idx_transaction_cashflow_issuer'), 'transaction_cashflow', ['issuer_id'], unique=False)
    op.create_index(op.f('idx_transaction_cashflow_category'), 'transaction_cashflow', ['transaction_category', 'cashflow_category'], unique=False)
    # ### end Alembic commands ###
